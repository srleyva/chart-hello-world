# https://circleci.com/docs/2.0/language-python/
version: 2
jobs:
  unit:
    docker:
      - image: golang:alpine
    steps:
      - checkout
      - run : |
          printf 'Unit tests go here...'
  build:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - setup_remote_docker
      - run: |
          echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
          gcloud auth configure-docker
          docker build . -t "gcr.io/$GOOGLE_PROJECT_ID/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1"
          docker push "gcr.io/$GOOGLE_PROJECT_ID/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1"
  integration:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run: |
          echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
          gcloud auth configure-docker
          curl -L "https://github.com/docker/compose/releases/download/1.23.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          docker-compose up -d
          curl localhost:8080/hello
  publish:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - setup_remote_docker
      - run: |
          echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
          gcloud auth configure-docker
          docker pull "gcr.io/$GOOGLE_PROJECT_ID/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1"
          docker tag "gcr.io/$GOOGLE_PROJECT_ID/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1" "gcr.io/nifi-staq-test/$CIRCLE_PROJECT_REPONAME:latest"
          docker push "gcr.io/$GOOGLE_PROJECT_ID/$CIRCLE_PROJECT_REPONAME:latest"
  deploy:
    docker:
      - image: sleyva97/chart:0.0.1
    steps:
      - checkout
      - run:
          name: Deploy to K8s
          environment:
            CHART_COMMAND: install
          command: 'entrypoint'

workflows:
  version: 2
  build-package-deploy:
    jobs:
      - unit
      - build:
          requires:
            - unit
      - integration:
          requires:
            - build
      - publish:
          requires:
            - integration
      - deploy:
          requires:
            - publish
